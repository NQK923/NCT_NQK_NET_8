services:
  mangaservice:
    image: mangaservice
    build:
      context: .
      dockerfile: MangaService/Dockerfile
    ports:
      - "5001:8080"

  notification:
    image: notification
    build:
      context: .
      dockerfile: Notification/Dockerfile
    ports:
      - "5002:8080"

  chapterservice:
    image: chapterservice
    build:
      context: .
      dockerfile: ChapterService/Dockerfile
    ports:
      - "5003:8080"

  account:
    image: account
    build:
      context: .
      dockerfile: Account/Dockerfile
    ports:
      - "5004:8080"

  categoryservice:
    image: categoryservice
    build:
      context: .
      dockerfile: CategoryService/Dockerfile
    ports:
      - "5005:8080"

  categorydetailsservice:
    image: categorydetailsservice
    build:
      context: .
      dockerfile: CategoryDetailsService/Dockerfile
    ports:
      - "5006:8080"

  mangafavoriteservice:
    image: mangafavoriteservice
    build:
      context: .
      dockerfile: MangaFavoriteService/Dockerfile
    ports:
      - "5007:8080"

  mangahistoryservice:
    image: mangahistoryservice
    build:
      context: .
      dockerfile: MangaHistoryService/Dockerfile
    ports:
      - "5008:8080"

  infonotificationaccount:
    image: infonotificationaccount
    build:
      context: .
      dockerfile: infoNotificationAccount/Dockerfile
    ports:
      - "5009:8080"

  notificationmangaaccount:
    image: notificationmangaaccount
    build:
      context: .
      dockerfile: notificationMangaAccount/Dockerfile
    ports:
      - "5010:8080"

  infoaccount:
    image: infoaccount
    build:
      context: .
      dockerfile: infoAccount/Dockerfile
    ports:
      - "5011:8080"

  mangaviewhistoryservice:
    image: mangaviewhistoryservice
    build:
      context: .
      dockerfile: MangaViewHistoryService/Dockerfile
    ports:
      - "5012:8080"
  
  comment:
    image: comment
    build:
      context: .
      dockerfile: Comment/Dockerfile
    ports:
      - "5013:8080"

  frontend-server:
    build:
      context: .
      dockerfile: FrontEnd/FrontEnd.Server/Dockerfile
    ports:
      - "4200:8080"
      - "8081:8081"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ConnectionStrings__DefaultConnection=Server=tcp:nqk923.database.windows.net,1433;Initial Catalog=mangaweb;Persist Security Info=False;User ID=nqk923;Password=Khanh090203@;MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;
    volumes:
      - .:/app

networks:
  default:
    driver: bridge